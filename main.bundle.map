{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACTX;AACL;AAQpC;IAEE,sBAAoB,IAAS;QAF/B,iBAoBC;QAlBqB,SAAI,GAAJ,IAAI,CAAK;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;aACzB,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAA3B,CAA2B,CAAC;aAC5C,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,YAAY,GAAG,GAAG,EAAvB,CAAuB,CAAC,CAAC;IAE/C,CAAC;IAED,6BAAM,GAAN,UAAO,CAAC;QACN,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QACjC,IAAI;YACF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAzBH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAsBF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BwD;AACjB;AACI;AACF;AACQ;AACJ;AAC7B;AAejB;IAAA;IAAyB,CAAC;IAb1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,iEAAc,CAAC,OAAO,EAAE;aACzB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;ACrB1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,6sBAA6sB,oDAAoD,mBAAmB,2CAA2C,2BAA2B,g+B","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 442;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 442\n// module chunks = 2","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  spaceScreens: Array<any>;\n  constructor(private http:Http) {\n    this.http.get('./data.json')\n      .map(response => response.json().screenshots)\n      .subscribe(res => this.spaceScreens = res);\n\n  }\n\n  likeMe(i) {\n    if (this.spaceScreens[i].liked == 0)\n      this.spaceScreens[i].liked = 1;\n    else\n      this.spaceScreens[i].liked = 0;\n  }\n\n  deleteMe(i) {\n    this.spaceScreens.splice(i,1);\n    console.log(i);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { AppComponent } from './app.component';\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 751\n// module chunks = 2","module.exports = \"<md-toolbar color=\\\"primary\\\">\\n  <span>test demo</span>\\n  <span class=\\\"spacer\\\"></span>\\n  <button md-icon-button [mdMenuTriggerFor]=\\\"menu\\\">\\n    <md-icon>more_vert</md-icon>\\n  </button>\\n  <md-menu #menu=\\\"mdMenu\\\">\\n    <button md-menu-item>\\n      <md-icon>fingerprint</md-icon>\\n      <span>Login</span>\\n    </button>\\n    <button md-menu-item disabled>\\n      <md-icon>announcement</md-icon>\\n      <span>Issues</span>\\n    </button>\\n    <button md-menu-item>\\n      <md-icon>notifications_off</md-icon>\\n      <span>Disable alerts</span>\\n    </button>\\n  </md-menu>\\n</md-toolbar>\\n\\n<md-tab-group>\\n  <md-tab label=\\\"Gallery\\\">\\n    <md-card *ngFor=\\\"let spaceScreen of spaceScreens; let i = index\\\">\\n      <img md-card-image src=\\\"{{ spaceScreen.img }}\\\">\\n      <md-card-content>\\n        <p>{{ spaceScreen.description }}</p>\\n      </md-card-content>\\n      <md-card-actions>\\n        <button md-button (click)=\\\"likeMe(i)\\\">\\n          <i class=\\\"material-icons md-18\\\" [class.red-color]=\\\"spaceScreen.liked == '1'\\\">favorite</i> LIKE\\n        </button>\\n        <button md-button (click)=\\\"deleteMe(i)\\\">\\n          <i class=\\\"material-icons md-18\\\">delete</i> DELETE\\n        </button>\\n      </md-card-actions>\\n    </md-card>\\n  </md-tab>\\n  <md-tab label=\\\"Settings\\\">\\n    <div id=\\\"page-padding\\\">\\n      <h1>Settings</h1>\\n      <p>Here you can control the various settings associated with your app. There's no need to hit a save button, as the values are updated automatically.</p>\\n      <label>Number of Thumbnails</label>\\n      <md-slider\\n        showTicks=\\\"true\\\" max=\\\"100\\\" min=\\\"0\\\" step=\\\"1\\\" thumbLabel=\\\"true\\\" value=\\\"18\\\">\\n      </md-slider>\\n      <md-slide-toggle>Some setting</md-slide-toggle>\\n    </div>\\n  </md-tab>\\n  <md-tab label=\\\"Content\\\">\\n\\n  </md-tab>\\n</md-tab-group>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 752\n// module chunks = 2"],"sourceRoot":""}